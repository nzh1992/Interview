Mysql基础考点


一、事务的原理，特性？
Transaction(事务)是数据库并发控制的基本单位。
事务可以看做是一系列SQL语句的集合，并且要么全部执行成功，要么全部执行失败（回滚）。

ACID是事务的四个基本特性：
原子性（Atomicity）：一个事务中所有操作全部完成或失败
一致性（Consistency）：事务开始和结束后数据完整性没有被破坏
隔离性（Isolation）：允许多个事务同时对数据库修改和读写
持久性（Durability）：事务结束后，修改是永久的，不会丢失


二、事务并发控制
如果不对事务进行并发控制，可能会产生四种异常情况。
1. 幻读（phantom read）：一个事务第二次查询出现第一次没有的结果。
2. 非重复度（nonrepeatable read）：一个事务重复读两次，得到不同的结果
3. 脏读（dirty read）：一个事务读取到另一个事务没有提交的修改
4. 修改丢失（lost update）：并发写入操作造成其中一些修改丢失

为了解决并发控制异常，定义了4种事务隔离级别
1. 读未提交（read uncommitted）：别的事务可以读取到未提交的改变
2. 读已提交（read committed）：只能读取已经提交的数据
3. 可重复读（repeatable read）：同一个事务先后查询结果一样（Mysql默认级别）
4. 串行化（Serializable）：事务完全串行化的执行，隔离级别最高，执行效率最低


三、如何结果高并发场景下的插入重复？
1. 使用数据库的唯一索引，当重复数据插入时捕捉对应的异常
2. 使用队列异步写入
3. 使用redis实现分布式锁，在插入时持有锁，在插入后释放锁


四、请解释乐观锁和悲观锁
乐观锁：
    乐观锁是先修改数据，更新的时候发现数据已经变了就回滚，check and set，一般通过版本号和时间戳来实现。

悲观锁：
    悲观锁是先获取锁在进行操作。一锁二查三更新，select for update，但是当执行时其他事务无法更新此表。

选取条件？
    需要根据 响应速度，冲突频率，重试代价来判断具体使用那种锁


五、常用数据类型
注意：下文中提及的存储空间意思是最大占用空间。
字符串（文本）的占用空间还和字符集有关系，如果是ascii，每个字符1字节；
如果是UTF8，每个字符最大可占3字节。
如果是UTF8MB4，每个字符最大可占4字节。

注意：定义表时的length属性，用于表示可见长读，并非真实存储的长度。

字符串（文本）：
    CHAR，定长字符串，长度范围0~255，4 Bytes
    VARCHAR，不定长度字符串，长度范围0~65535，4 Bytes
    TEXT，纯文本内容，长度范围0~65535，4 Bytes

数值：
    TINYINT，取值范围-128~127 或 0~255，1 Bytes
    SMALLINT，取值范围-32768~32767 或 0~65535， 2 Bytes
    MEDIUMINT，取值范围-8388608~8388607 或 0~16777215，3 Bytes
    INT，取值范围-2147438648~2147438647 或 0~4294967295，4 Bytes
    BIGINT，取值范围-9.223e19~9.223e19 或 0~1.846e20，8 Bytes
    FLOAT，浮点数，4 Bytes
    DOUBLE，福电视，8 Bytes

日期：
    DATE，YYYY-MM-DD，3 Bytes
    DATETIME，YYYY-MM-DD HH:MM:SS，8 Bytes
    TIMESTAMP，YYYYMMDDHHMMSS，可接受范围从1970年到2038年。4 Bytes


四、常用数据库引擎之间的区别
InnoDB：
    1. 支持事务
    2. 支持外键
    3. 支持行锁和表锁
    4. 不支持全量索引

MyISAM：
    1. 不支持事务
    2. 不支持外键
    3. 不支持表锁
    4. 支持全量索引
