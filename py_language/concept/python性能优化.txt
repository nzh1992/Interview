python性能优化


一、什么是GIL？
全称Global Interpreter Lock，全局解释器锁。
Cpython解释器的内存管理并不是线程安全的，这意味着在多线程的环境下可能会修改同一资源，造成数据错误。
所以Cpython采用GIL来保护多线程情况下对Python对象的访问。
原理是，Cpython使用简单的锁机制避免多个线程同时执行字节码。

优势：
同一时刻只有一个线程执行字节码，保证了线程安全

劣势：
CPU密集型程序难以利用多核优势。
IO期间会释放GIL，对IO密集型程序影响不大。


二、如何规避GIL的影响？
1。区分是CPU密集还是IO密集型程序
若是CPU密集型程序，可以使用多进程+进程池。也可以用Cython编程C扩展来提升性能。
若是IO密集型程序，可以使用多线程，或者协程


三、为什么有了GIL还要关注线程安全？
从原子性角度回答


四、服务端性能优化措施有哪些？
1. 数据结构和算法优化
2. 数据库层：
    索引优化，慢查询消除，批量操作减少IO，NoSQL
3. 网络IO：
    批量操作，pipeline操作减少IO
4. 缓存：
    使用内存数据库redis/memcached
5. 异步：
    asyncio，celery
6. 并发：
    gevent，多线程

