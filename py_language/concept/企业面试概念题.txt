1. python新式类和经典类的区别？
    a. 凡是继承了object的类都是新式类
    b. python3中只有新式类
    c. python2中继承object的是新式类，没有写父类的是经典类
    d. 经典类目前在python中基本没有应用
    e. 保持class与type的统一对新式类的实例执行a.class与type(a)的结果是一致的，对于经典类不一定。
    f. 对于多重继承的属性的搜索顺序不一致，新式类采用广度优先，经典类采用深度优先。


2. python内置的数据结构有几种？
    a. 整型 int（python3中，无线精度）
    b. 浮点型 float
    c. 复数 complex
    d. 字符串 str
    e. 列表 list
    f. 元祖 tuple
    g. 字典 dict
    h. 集合 set


3. python中可变类型和不可变类型？
    a. 可变类型有list，dict，set。
    b. 不可变类型有int, float, str, tuple。
    c. 当修改可变类型时，可变类型传递的是内存中的地址，直接修改内存中的值，没有新开辟内存空间。
    d. 当修改不可变类型时，并没有修改原内存地址中的值，而是开辟一开新的内存，将原地址中的值复制过去，对这块新开辟的内存中的值进行修改。


4. is和==有什么区别？
    is比较的是两个对象的id是否相等（换句话说，比较的是内存地址是否指向同一块内存），也就是比较是否是同一个对象。
    ==比较的是两个对象的内容(值)是否相等，默认会调用对象的__eq__()方法。


5. python中变量的作用域？（变量的查找顺序）
    L: local, 函数内部作用域
    E: enclosing, 函数内部与内嵌函数之间（闭包）
    G: global, 全局作用域
    B: build-in, 内置作用域

6. Python中类方法、对象方法、静态方法有何区别？
    类方法：是类的方法，通过@classmethod装饰器定义，形参是cls，表示类，类和该类的对象都可调用
    对象方法：类实例化对象的方法，只有实例对象可以调用，形参是self，表示对象本身
    静态方法：是一个任意函数，通过@staticmethod进行装饰，可以用对象直接调用，由于静态方法没有cls、self形参，所以实际上跟类没有太大关系

7. 介绍Cython, IPython, Pypy, Cpython, Numba各有什么缺点？
    Cpython: 是由Guido van Rossum使用C语言开发python解释器，也是python官网提供的版本。
    IPython: 基于Cpython分装的一个交互式解释器，仅仅是在交互方面有所增强。
    Pypy: 采用JIT技术，用于提升python代码执行速度
    Numba: Numba是一个第三方库，可以在运行时将Python代码编译为本地机器指令，而不会强制大幅度改变原Python代码

8. 请描述抽象类和接口类的区别和联系
    a. 抽象类：规定了一些列方法，并规定了必须由继承类实现的方法。由于有抽象方法的存在，所以抽象类不能实例化。
       可以将抽象类理解为毛坯房，门窗、墙面的样式由你自己来定，所以抽象类与作为基类的普通类的区别在于约束性更强。
    b. 接口类：与抽象类相似，表现在接口中定义的方法，必须由引用类实现，但他与抽象类的根本区别在于用途，与不同个体间沟通的规则。
       比如，你要进宿舍需要有钥匙，这个钥匙就是你与宿舍的接口，你的舍友也有这个接口，所以他也能进入宿舍。
    c. 区别和联系：
       1. 接口是抽象类的变体，接口中所有的方法都是抽象的，而抽象类中可以有非抽象方法，抽象类是生命方法的存在，而不去实现它的类。
       2. 接口可以继承，抽象类不行
       3. 接口定义方法，没有实现的代码，而抽象类可以实现部分方法
       4. 接口中基本数据类型为static，而抽象不是
